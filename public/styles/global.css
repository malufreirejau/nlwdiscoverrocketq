*{
    margin: 0;
    padding: 0;
    border: none;
    text-decoration: none;
    box-sizing: border-box;
}

html{
    --black: #0D114F;
    --white: #FAFAFA;
    --red: #E83F5B;
    --light-blue: #E0ECFF;
    --blue: #3485FF;
    --background: #F6FAFF;
    --overlay: #040911;
    --icons-details: #A5B0C1;

    --grey-dark: #4D5E77;
    --grey-blue: #A1B2CD;
    --grey-light: #E5EAF1;
    --grey-medium: #eaecf2;


    /* 1rem = 16px (User Agent  que é o padrao que é o 100% - tem lugar que o padrão vai ser diferente) 
    font-size= 1rem vai ser igual a font-size= 100%
    font-size= 28px é igual a font-size: 1,75rem (dividi 28 por 16 - o tamanho que quero pelo tamanho padrão)
    o padrão é 16, vou mudar o padrão pra 10px então será 62,5% de 16px - deixei padrão pq está dentro do html
    eu quero que meu h2 tenha 28pix (que está fora da tag html, meu padrão agora é 10px então 28 dividido por 10 sera 2.8 rem
    o 28 está no figma que foi dado pela criadora do layout
    uso o rem por ser responsivo enqto o px seria estatico
    */
    font-size: 62.5% /* 10px */

}

body{
    /*view height será 100 % do qto vc está usando de tela, minimizada, celular, etc (de onde começa
    a onde termina vertical) 
    tb temos o vw - view width que é de onde começa a tela até onde termina horizontal */
    display: flex;
    height: 100vh;
    background: var(--background);
}

body, button, input, textarea{
    /* clamp é intervalo de tamanho - no menor tamanho sempre vai ser 14px, o mínimo
    o padrão será 16px ou 1.6rem, e se aumentar demais a tela a letra vai chegar no máximo
    em 2vw - ele calcula o width total e calcula o 2 desse total
    estou colocando esses padroes aqui pq se colocar no body ele nao muda os botões, etc*/
    font-size: clamp(14px, 1.6rem, 2vw);

    font-family: 'Open Sans', sans-serif;
    /* font-family: 'Poppins', sans-serif;*/
}

.content{
    width: 100%;
    margin: 0 auto;
}

.sr-only{
    position: absolute;
    height: 1px;
    width: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

/* input e buttons */
input, button, .button{
    border-radius: .8rem;
    height: 5rem;
}

button, .button{
    font-family: 'Poppins';
    font-weight: 500;
    line-height: 0; /* tamanho que acompanha o texto, espaçamento entre as linhas do texto */

    display: flex;
    align-items: center; /* alinha na vertical */
    justify-content: center; /* alinha na horizontal e so text-content não alinharia a imagem junto */

    background: var(--blue);
    color: var(--white);

    transition: filter .2s;

    cursor: pointer;
}

button:hover, .button:hover{
    filter: brightness(1.2);
}

button > img,
.button > img{
    margin-right: 1rem;
    width: 2rem;
}

button.outlined,
.button.outlined{
    background: var(--white);
    color: var(--blue);
    border: .2rem solid var(--blue);
}

button.red,
.button.red{
    background: var(--red);
    color: var(--white);

}

button.grey,
.button.grey{
    background: var(--grey-light);
    color: var(--grey-dark);
}

/* header */

.content header{
    width: 80%;
    margin: 3.5rem auto;
}

.content header img{
    width: 16.7rem;
}